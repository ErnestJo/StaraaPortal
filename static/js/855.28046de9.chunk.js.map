{"version":3,"file":"static/js/855.28046de9.chunk.js","mappings":"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","sources":["Helper/Notify.js","actions/request.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","assets/brand/logo.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","components/DocsExample.js","layout/DefaultLayout.js"],"sourcesContent":["import { toast } from 'react-toastify'\r\nclass Notify {\r\n  notifyError = (ms) => {\r\n    toast.error(ms, { toastId: '' })\r\n  }\r\n  notifyErrorTopCenter = (ms) => {\r\n    toast.error(ms, {\r\n      toastId: '',\r\n      position: toast.POSITION.TOP_CENTER,\r\n    })\r\n  }\r\n  notifyInfo = (ms) => {\r\n    toast.info(ms, { toastId: '' })\r\n  }\r\n  notifyInfoTopCenter = (ms) => {\r\n    toast.info(ms, {\r\n      toastId: '',\r\n      position: toast.POSITION.TOP_CENTER,\r\n    })\r\n  }\r\n  notifySuccess = (ms) => {\r\n    toast.success(ms, { toastId: '' })\r\n  }\r\n\r\n  notifySuccessTopCenter = (ms) => {\r\n    toast.success(ms, {\r\n      toastId: '',\r\n      position: toast.POSITION.TOP_CENTER,\r\n    })\r\n  }\r\n}\r\n\r\nexport default new Notify()\r\n","import { CLEAR_STORAGE, SET_USER_DATA } from '../constants/shared'\r\n\r\nexport const clearStore = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_STORAGE,\r\n    })\r\n  }\r\n}\r\n\r\nexport const InsertUserData = (userData) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SET_USER_DATA,\r\n      payload: userData,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\n\nconst PropertiesManagement = React.lazy(() =>\n  import('./views/propertiesManagement/PropertiesManagement'),\n)\nconst EmployesManagement = React.lazy(() => import('./views/userManagement/UserManagement'))\nconst ProjectManagement = React.lazy(() => import('./views/projectManagement/ProjectManagement'))\nconst PropertiesRequst = React.lazy(() => import('./views/propertiesRequest/PropertiesRequest'))\nconst Reports = React.lazy(() => import('./views/reports/Reports'))\nconst Logs = React.lazy(() => import('./views/logs/Logs'))\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\nconst SystemConfig = React.lazy(() => import('./views/systemConfig/SystemConfig'))\nconst UserProfile = React.lazy(() => import('./views/userSettings/userSettings'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/properties-management', name: 'Properties Management', element: PropertiesManagement },\n  { path: '/employee-management', name: 'Employes Management', element: EmployesManagement },\n  { path: '/project-management', name: 'Project Management', element: ProjectManagement },\n  { path: '/properties-request', name: 'Properties Requst', element: PropertiesRequst },\n  { path: '/reports', name: 'Reports', element: Reports },\n  { path: '/logs', name: 'Logs', element: Logs },\n  { path: '/system-configuration', name: 'System', element: SystemConfig },\n  { path: '/profile', name: 'User Profile', element: UserProfile },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense, useEffect } from 'react'\nimport { Navigate, Route, Routes, Switch } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { connect } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n// routes config\nimport routes from '../routes'\n\nconst AppContent = ({ sharedState, ...prop }) => {\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    let user = sharedState.userData\n    if (user == '') {\n      console.log('jaksa')\n      return navigate('/login')\n    }\n  }, [])\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {sharedState.userData == ''\n            ? navigate('/login')\n            : routes.map((route, idx) => {\n                return (\n                  route.element && (\n                    <Route\n                      key={idx}\n                      path={route.path}\n                      exact={route.exact}\n                      name={route.name}\n                      element={<route.element />}\n                    />\n                  )\n                )\n              })}\n\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nconst MapStateToProps = (state) => ({\n  sharedState: state.SharedState,\n})\n\nexport default connect(MapStateToProps)(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <span className=\"ms-1\">&copy; 2023 ErnestUi Labs.</span>\n      </div>\n      <div className=\"ms-auto\"></div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n  cilAccountLogout,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useNavigate } from 'react-router-dom'\nimport { clearStore } from '../../actions/request'\nimport { connect } from 'react-redux'\nimport Notify from '../../Helper/Notify'\n\nconst AppHeaderDropdown = ({ clearStore, ...prop }) => {\n  const navigate = useNavigate()\n  const handleClick = () => {\n    navigate('/profile')\n  }\n\n  const signOut = (e) => {\n    e.preventDefault()\n    clearStore()\n    navigate('/login')\n    Notify.notifySuccess('Succesfull logout')\n  }\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CIcon icon={cilUser} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader>\n        <CDropdownItem onClick={handleClick}>\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem onClick={(e) => signOut(e)}>\n          <CIcon icon={cilAccountLogout} className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nconst MapStateToProps = (state) => ({\n  sharedState: state.sharedState,\n})\n\nexport default connect(MapStateToProps, { clearStore })(AppHeaderDropdown)\n","export const logo = [\n  '',\n  `\n  <title>coreui react pro</title>\n  \n`,\n]\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu, cilUser } from '@coreui/icons'\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilList} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <h2>\n            <b></b>\n          </h2>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPencil,\n  cilFile,\n  cilSpeedometer,\n  cilPeople,\n  cilRoom,\n  cilSwapHorizontal,\n  cibReadTheDocs,\n  cilAppsSettings,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Project Management',\n    to: '/project-management',\n    icon: <CIcon icon={cilFile} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Employee Management',\n    to: '/employee-management',\n    icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Properties Management',\n    to: '/properties-management',\n    icon: <CIcon icon={cilRoom} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Properties Request',\n    to: '/properties-request',\n    icon: <CIcon icon={cilSwapHorizontal} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Reports',\n    to: '/reports',\n    icon: <CIcon icon={cibReadTheDocs} customClassName=\"nav-icon\" />,\n  },\n  // {\n  //   component: CNavItem,\n  //   name: 'Logs',\n  //   to: '/logs',\n  //   icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  // },\n  {\n    component: CNavItem,\n    name: 'System Configuration',\n    to: '/system-configuration',\n    icon: <CIcon icon={cilAppsSettings} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { AppSidebarNav } from './AppSidebarNav'\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\nimport { connect } from 'react-redux'\nimport softnet from '../assets/images/softnet.png'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = ({ changeState }) => {\n  const dispatch = useDispatch(changeState)\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex logoPlace\" to=\"/\">\n        {/* <CIcon className=\"sidebar-brand-full\" src={softnet} height={35} /> */}\n        <img src={softnet} className=\"logoSize\" />\n        <CIcon className=\"sidebar-brand-narrow\" height={35} />\n      </CSidebarBrand>\n\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nconst MapStateToProps = (state) => ({\n  changeState: state.changeState,\n})\nexport default connect(MapStateToProps)(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nimport packageJson from '../../package.json'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon icon={cilCode} className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["Notify","notifyError","ms","toast","toastId","notifyErrorTopCenter","position","notifyInfo","notifyInfoTopCenter","notifySuccess","notifySuccessTopCenter","clearStore","dispatch","type","CLEAR_STORAGE","InsertUserData","userData","SET_USER_DATA","payload","path","exact","name","element","React","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","connect","state","sharedState","SharedState","navigate","useNavigate","useEffect","console","log","lg","Suspense","fallback","color","idx","to","replace","AppFooter","variant","placement","caret","icon","cilUser","size","onClick","e","preventDefault","signOut","cilAccountLogout","logo","useDispatch","sidebarShow","useSelector","fluid","cilList","height","alt","AppSidebarNav","items","navLink","badge","text","navItem","item","component","rest","Component","NavLink","navGroup","String","toggler","visible","startsWith","CNavItem","cilSpeedometer","customClassName","cilFile","cilPeople","cilRoom","cilSwapHorizontal","cibReadTheDocs","cilAppsSettings","changeState","unfoldable","sidebarUnfoldable","onVisibleChange","src","navigation","DocsExample","props","children","_href","packageJson","cilMediaPlay","target","cilCode"],"sourceRoot":""}