{"version":3,"file":"static/js/119.9a328208.chunk.js","mappings":"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","sources":["components/forms/AddUserForm.js","views/userManagement/UserManagement.js","../node_modules/@hookform/resolvers/src/validateFieldsNatively.ts","../node_modules/@hookform/resolvers/src/toNestError.ts","../node_modules/@hookform/resolvers/yup/src/yup.ts"],"sourcesContent":["import React from 'react'\r\nimport { Form, Row, Col, Button } from 'react-bootstrap'\r\nfunction AddUserForm() {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Enter First Name\" />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Middle Name</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Enter Middle Name\" />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Enter Last Name\" />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Staff Email</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            {' '}\r\n            <Form.Label>Gender</Form.Label>\r\n            <Form.Select aria-label=\"Default select example\">\r\n              <option>Open this select menu</option>\r\n              <option value=\"1\">Male</option>\r\n              <option value=\"2\">Female</option>\r\n            </Form.Select>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            {' '}\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Select aria-label=\"Default select example\">\r\n              <option>Open this select menu</option>\r\n              <option value=\"1\">Kimara</option>\r\n              <option value=\"2\">Kiluvya</option>\r\n            </Form.Select>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddUserForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport { Button, Card, Modal, Form, Row, Col } from 'react-bootstrap'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport ExcelJS from 'exceljs'\r\nimport { exportDataGrid } from 'devextreme/excel_exporter'\r\nimport saveAs from 'file-saver'\r\nimport Notify from '../../Helper/Notify'\r\nimport AddUserForm from '../../components/forms/AddUserForm'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport DataGrid, {\r\n  Column,\r\n  FilterRow,\r\n  HeaderFilter,\r\n  SearchPanel,\r\n  Summary,\r\n  TotalItem,\r\n  ColumnChooser,\r\n  Export,\r\n  Selection,\r\n  Lookup,\r\n  Paging,\r\n} from 'devextreme-react/data-grid'\r\n\r\nconst GetGender_URL = '/api/get_gender'\r\nconst GetAddres_URL = '/api/get_address'\r\nconst AddStaff_URL = '/api/add_staff'\r\nconst GteUser_URL = '/api/get_staff'\r\nconst UpdateStaff_URL = '/api/update_staff'\r\n\r\nconst schema = yup.object().shape({\r\n  first_name: yup.string().required(),\r\n  middle_name: yup.string().required(),\r\n  last_name: yup.string().required(),\r\n  email: yup.string().required(),\r\n  gender: yup.number().required(),\r\n  addres: yup.number().required(),\r\n})\r\n\r\nfunction CustomModal(props) {\r\n  const [addressOption, setAddressOptions] = useState([])\r\n  const [genderOption, setGenderOptions] = useState([])\r\n\r\n  const userRef = useRef()\r\n\r\n  React.useEffect(() => {}, [])\r\n  const { register, errors, handleSubmit, watch, reset } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(schema),\r\n  })\r\n\r\n  const [errMsg, setErrMsg] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  const submituserData = (data) => {\r\n    try {\r\n      var body = {\r\n        first_name: data.first_name,\r\n        middle_name: data.middle_name,\r\n        last_name: data.last_name,\r\n        email: data.email,\r\n        addres: parseInt(data.addres),\r\n        gender: parseInt(data.gender),\r\n      }\r\n      console.log(body)\r\n      axios\r\n        .post(AddStaff_URL, body, {\r\n          headers: { 'content-Type': 'application/json' },\r\n        })\r\n        .then((data) => {\r\n          reset()\r\n          console.log(data.data[0].data[0])\r\n          if ((data.data[0].data[0].code = 111)) {\r\n            props.reloadPage()\r\n            props.onHide()\r\n            Notify.notifySuccess('User was added Succefully')\r\n          } else {\r\n            Notify.notifyError('failed to add new User')\r\n          }\r\n        })\r\n\r\n      setSuccess(true)\r\n    } catch (e) {}\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GetGender_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setGenderOptions(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GetAddres_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setAddressOptions(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal\">{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit(submituserData)}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter First Name\"\r\n                  name=\"first_name\"\r\n                  {...register('first_name')}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Middle Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Middle Name\"\r\n                  name=\"middle_name\"\r\n                  {...register('middle_name')}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Last Name\"\r\n                  name=\"last_name\"\r\n                  {...register('last_name')}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Staff Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  {...register('email')}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>Gender</Form.Label>\r\n              <Form.Select aria-label=\"Default select\" {...register('gender')} required>\r\n                <option value=\"\">Choose Gender </option>\r\n                {genderOption.length > 0 &&\r\n                  genderOption.map((gender) => (\r\n                    <option key={gender.gender_id} value={gender.gender_id}>\r\n                      {gender.gender_name}\r\n                    </option>\r\n                  ))}\r\n              </Form.Select>\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Select aria-label=\"Default select example\" {...register('addres')} required>\r\n                <option value=\"\">select Address</option>\r\n                {addressOption.length > 0 &&\r\n                  addressOption.map((addres) => (\r\n                    <option key={addres.address_id} value={addres.address_id}>\r\n                      {addres.address_name}\r\n                    </option>\r\n                  ))}\r\n              </Form.Select>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Col md={12} className=\"mt-2\">\r\n            <Button onClick={props.onHide}>Close</Button>\r\n            <Button className=\"float-end\" type=\"submit\">\r\n              {props.title}\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\nconst UserManagement = () => {\r\n  const [modalShow, setModalShow] = React.useState(false)\r\n  const [dataStaff, setDataStaff] = useState([])\r\n\r\n  const applyFilterTypes = [\r\n    {\r\n      key: 'auto',\r\n      name: 'Immediately',\r\n    },\r\n    {\r\n      key: 'onClick',\r\n      name: 'On Button Click',\r\n    },\r\n  ]\r\n\r\n  const onExporting = (e) => {\r\n    const workbook = new ExcelJS.Workbook()\r\n    const worksheet = workbook.addWorksheet('User sheet')\r\n\r\n    exportDataGrid({\r\n      component: e.component,\r\n      worksheet: worksheet,\r\n      autoFilterEnabled: true,\r\n    }).then(() => {\r\n      workbook.xlsx.writeBuffer().then((buffer) => {\r\n        saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'UserList.xlsx')\r\n      })\r\n    })\r\n    e.cancel = true\r\n  }\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    showFilterRow: true,\r\n    showHeaderFilter: true,\r\n    currentFilter: applyFilterTypes[0].key,\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  })\r\n  var dataGrid = null\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const fetchData = () => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GteUser_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setDataStaff(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Card.Header>\r\n          <Button className=\"primary\" onClick={() => setModalShow(true)}>\r\n            Add Staff\r\n          </Button>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <DataGrid\r\n            ref={(ref) => (dataGrid = ref)}\r\n            dataSource={dataStaff}\r\n            // defaultColumns={columns}\r\n            showRowLines={true}\r\n            showBorders={true}\r\n          >\r\n            {/* <Column dataField=\"staff_id\" caption=\"Staff Id\" /> */}\r\n            <Column dataField=\"email\" caption=\"Email\" />\r\n            <Column dataField=\"staff\" caption=\"Full Name\" />\r\n            <Column dataField=\"addres_name\" caption=\"Address\" />\r\n            <Column dataField=\"gender_name\" caption=\"Gender\" />\r\n            <Column dataField=\"role\" caption=\"Role\" />\r\n            {/* <Column\r\n              dataField=\"staff_id\"\r\n              caption=\"Actions\"\r\n              allowFiltering={false}\r\n              cellRender={(e) => (\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <Button variant=\"success\" className=\"mx-1\">\r\n                    <Icon.Check2 />\r\n                  </Button>\r\n                  <Button variant=\"warning\" className=\"mx-1\">\r\n                    <Icon.Pencil />\r\n                  </Button>\r\n                  <Button variant=\"danger\" className=\"mx-1\">\r\n                    <Icon.Trash />\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            /> */}\r\n            <ColumnChooser enabled={true} />\r\n            <Selection mode=\"multiple\" />\r\n            <Export enabled={true} fileName=\"User\" allowExportSelectedData={true} />\r\n            <Paging defaultPageSize={5} />\r\n            <FilterRow visible={state.showFilterRow} applyFilter={state.currentFilter} />\r\n            <HeaderFilter visible={state.showHeaderFilter} />\r\n            <Selection mode=\"single\" />\r\n            <SearchPanel visible={true} width={240} placeholder=\"Search...\" />\r\n            <Summary>\r\n              <TotalItem column=\"id_no\" summaryType=\"count\" />\r\n            </Summary>\r\n          </DataGrid>\r\n        </Card.Body>\r\n      </Card>\r\n      <CustomModal\r\n        show={modalShow}\r\n        reloadPage={fetchData}\r\n        onHide={() => setModalShow(false)}\r\n      ></CustomModal>\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomModal.defaultProps = {\r\n  title: 'Add Staff',\r\n}\r\nCustomModal.propTypes = {\r\n  onHide: PropTypes.func,\r\n}\r\nexport default UserManagement\r\n","import {\n  get, FieldError, ResolverOptions, Ref\n} from 'react-hook-form';\n\nconst setCustomValidity = (ref: Ref, fieldPath: string, errors: Record<string, FieldError>) => {\n  if (ref && 'reportValidity' in ref) {\n    const error = get(errors, fieldPath) as FieldError | undefined;\n    ref.setCustomValidity((error && error.message) || '');\n\n    ref.reportValidity();\n  }\n};\n\n// Native validation (web only)\nexport const validateFieldsNatively = <TFieldValues>(\n  errors: Record<string, FieldError>,\n  options: ResolverOptions<TFieldValues>,\n): void => {\n\n\n  for (const fieldPath in options.fields) {\n    const field = options.fields[fieldPath];\n    if (field && field.ref && 'reportValidity' in field.ref) {\n      setCustomValidity(field.ref, fieldPath, errors)\n    } else if (field.refs) {\n      field.refs.forEach((ref: HTMLInputElement) => setCustomValidity(ref, fieldPath, errors))\n    }\n  }\n};\n","import {\n  set,\n  get,\n  FieldError,\n  FieldErrors,\n  Field,\n  ResolverOptions,\n} from 'react-hook-form';\nimport { validateFieldsNatively } from './validateFieldsNatively';\n\nexport const toNestError = <TFieldValues>(\n  errors: Record<string, FieldError>,\n  options: ResolverOptions<TFieldValues>,\n): FieldErrors<TFieldValues> => {\n  options.shouldUseNativeValidation && validateFieldsNatively(errors, options);\n\n  const fieldErrors = {} as FieldErrors<TFieldValues>;\n  for (const path in errors) {\n    const field = get(options.fields, path) as Field['_f'] | undefined;\n\n    set(\n      fieldErrors,\n      path,\n      Object.assign(errors[path], { ref: field && field.ref }),\n    );\n  }\n\n  return fieldErrors;\n};\n","import Yup from 'yup';\nimport { toNestError, validateFieldsNatively } from '@hookform/resolvers';\nimport { appendErrors, FieldError } from 'react-hook-form';\nimport { Resolver } from './types';\n\n/**\n * Why `path!` ? because it could be `undefined` in some case\n * https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n */\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) => {\n  return (error.inner || []).reduce<Record<string, FieldError>>(\n    (previous, error) => {\n      if (!previous[error.path!]) {\n        previous[error.path!] = { message: error.message, type: error.type! };\n      }\n\n      if (validateAllFieldCriteria) {\n        const types = previous[error.path!].types;\n        const messages = types && types[error.type!];\n\n        previous[error.path!] = appendErrors(\n          error.path!,\n          validateAllFieldCriteria,\n          previous,\n          error.type!,\n          messages\n            ? ([] as string[]).concat(messages as string[], error.message)\n            : error.message,\n        ) as FieldError;\n      }\n\n      return previous;\n    },\n    {},\n  );\n};\n\nexport const yupResolver: Resolver =\n  (schema, schemaOptions = {}, resolverOptions = {}) =>\n  async (values, context, options) => {\n    try {\n      if (schemaOptions.context && process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n        );\n      }\n\n      const result = await schema[\n        resolverOptions.mode === 'sync' ? 'validateSync' : 'validate'\n      ](\n        values,\n        Object.assign({ abortEarly: false }, schemaOptions, { context }),\n      );\n\n      options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n      return {\n        values: resolverOptions.rawValues ? values : result,\n        errors: {},\n      };\n    } catch (e: any) {\n      if (!e.inner) {\n        throw e;\n      }\n\n      return {\n        values: {},\n        errors: toNestError(\n          parseErrorSchema(\n            e,\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n  };\n"],"names":["schema","yup","shape","first_name","required","middle_name","last_name","email","gender","addres","CustomModal","props","useState","addressOption","setAddressOptions","genderOption","setGenderOptions","useRef","React","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","reset","watch","setSuccess","useEffect","axios","method","url","then","data","console","log","catch","err","Modal","size","centered","closeButton","id","title","onSubmit","body","parseInt","headers","code","reloadPage","onHide","Notify","e","md","className","controlId","type","placeholder","name","value","length","map","gender_id","gender_name","address_id","address_name","Button","onClick","defaultProps","modalShow","setModalShow","dataStaff","setDataStaff","showFilterRow","showHeaderFilter","currentFilter","startDate","Date","endDate","state","fetchData","Card","ref","dataSource","showRowLines","showBorders","Column","dataField","caption","ColumnChooser","enabled","Selection","Export","fileName","allowExportSelectedData","Paging","defaultPageSize","FilterRow","visible","applyFilter","HeaderFilter","SearchPanel","width","Summary","TotalItem","column","summaryType","show","setCustomValidity","fieldPath","error","get","message","reportValidity","validateFieldsNatively","options","field","fields","refs","forEach","toNestError","shouldUseNativeValidation","fieldErrors","path","set","Object","assign","schemaOptions","resolverOptions","values","context","Promise","abortEarly","result","rawValues","inner","validateAllFieldCriteria","criteriaMode","reduce","previous","types","messages","appendErrors","concat"],"sourceRoot":""}