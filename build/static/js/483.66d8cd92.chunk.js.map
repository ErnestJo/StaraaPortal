{"version":3,"file":"static/js/483.66d8cd92.chunk.js","mappings":"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","sources":["../node_modules/@coreui/icons/js/free/cil-cloud-download.js","views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["export const cilCloudDownload = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='272 434.744 272 209.176 240 209.176 240 434.744 188.118 382.862 165.49 405.489 256 496 346.51 405.489 323.882 382.862 272 434.744' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400,161.176c0-79.4-64.6-144-144-144s-144,64.6-144,144a96,96,0,0,0,0,192h80v-32H112a64,64,0,0,1,0-128h32v-32a112,112,0,0,1,224,0v32h32a64,64,0,0,1,0,128H320v32h80a96,96,0,0,0,0-192Z' class='ci-primary'/>\"]","import React from 'react'\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport { cilCloudDownload } from '@coreui/icons'\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport Notify from '../../Helper/Notify'\n\nconst Dashboard = () => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 202</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n      {/* <WidgetsBrand withCharts /> */}\n\n      <CRow></CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\nimport { useEffect, useState, useRef } from 'react'\nimport axios from 'axios'\n\nconst GetStats_URL = '/api/get_dashboard_stats'\nconst WidgetsDropdown = () => {\n  const [stats, setStats] = useState([])\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: GetStats_URL,\n    })\n      .then((data) => {\n        var stat = data.data[0].data[0]\n        setStats(stat)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={stats.totalEmployees}\n          title=\"Total Employees\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={stats.totalRequests}\n          title=\"Total Properties Request\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={stats.properties}\n          title=\"Total Properties\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={stats.totalProject}\n          title=\"Total Projects\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["cilCloudDownload","random","min","max","Math","floor","WidgetsDropdown","className","sm","id","color","icon","map","value","active","style","height","marginTop","data","labels","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","xs","cols","md","title","percent","item","index","thin","withCharts","chartOptions","lg","chart","type","cibFacebook","values","cibTwitter","cibLinkedin","cilCalendar","useState","stats","setStats","useEffect","axios","method","url","then","stat","catch","err","console","log","totalEmployees","action","alignment","caret","cilOptions","disabled","pointBackgroundColor","drawBorder","totalRequests","properties","totalProject","barPercentage","drawTicks"],"sourceRoot":""}