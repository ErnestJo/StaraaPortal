{"version":3,"file":"static/js/20.c5cf9258.chunk.js","mappings":"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","sources":["views/reports/Reports.js","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport { Button, Card, Modal, Form, Row, Col, Badge } from 'react-bootstrap'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport ExcelJS from 'exceljs'\r\nimport { exportDataGrid } from 'devextreme/excel_exporter'\r\nimport saveAs from 'file-saver'\r\nimport Notify from '../../Helper/Notify'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport DataGrid, {\r\n  Column,\r\n  FilterRow,\r\n  HeaderFilter,\r\n  SearchPanel,\r\n  Summary,\r\n  TotalItem,\r\n  ColumnChooser,\r\n  Export,\r\n  Selection,\r\n  Lookup,\r\n  Paging,\r\n} from 'devextreme-react/data-grid'\r\n\r\nconst GetProject_URL = '/api/get_project'\r\nconst GetStaff_URL = '/api/get_staff'\r\nconst GetProperties_URL = '/api/get_properties'\r\nconst GetPropertiesReq_URL = '/api/get_properties_request'\r\nconst GetReqStatus_URL = '/api/get_request_status'\r\nconst Addproperites_URL = '/api/add_properties_req'\r\nconst UpdatePropertiesReqStatus_URL = '/api/update_properties_req_status'\r\n\r\nfunction CustomModal(props) {\r\n  const [projectOption, setProjectOptions] = useState([])\r\n  const [staffOption, setStaffOptions] = useState([])\r\n  const [reqStatusOption, setReqStatusOptions] = useState([])\r\n  const [propertiesOption, setPropertiesOptions] = useState([])\r\n\r\n  const userRef = useRef()\r\n\r\n  React.useEffect(() => {}, [])\r\n  const { register, errors, handleSubmit, watch, reset } = useForm({\r\n    mode: 'onChange',\r\n    //  resolver: yupResolver(schema),\r\n  })\r\n\r\n  const [errMsg, setErrMsg] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  const submitReqData = (data) => {\r\n    try {\r\n      var body = {\r\n        req_name: data.req_name,\r\n        req_date: data.req_date,\r\n        request_status: parseInt(data.request_status),\r\n        staff: parseInt(data.staff),\r\n        propertiy: parseInt(data.propertiy),\r\n        project: parseInt(data.project),\r\n      }\r\n      console.log(body)\r\n      axios\r\n        .post(Addproperites_URL, body, {\r\n          headers: { 'content-Type': 'application/json' },\r\n        })\r\n        .then((data) => {\r\n          reset()\r\n          console.log(data.data[0].data[0])\r\n          if ((data.data[0].data[0].code = 111)) {\r\n            Notify.notifySuccess('Project was added Succefully')\r\n          } else {\r\n            Notify.notifyError('failed to add new project')\r\n          }\r\n        })\r\n\r\n      setSuccess(true)\r\n    } catch (e) {}\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GetProject_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setProjectOptions(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GetStaff_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setStaffOptions(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GetProperties_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setPropertiesOptions(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GetReqStatus_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setReqStatusOptions(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal\">{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit(submitReqData)}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Request Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Request Name\"\r\n                  name=\"req_name\"\r\n                  {...register('req_name')}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>Property/Item</Form.Label>\r\n              <Form.Select aria-label=\"Default select\" {...register('propertiy')}>\r\n                <option>Choose Item</option>\r\n                {propertiesOption.length > 0 &&\r\n                  propertiesOption.map((propertiy) => (\r\n                    <option key={propertiy.properties_id} value={propertiy.properties_id}>\r\n                      {propertiy.properties_name}\r\n                    </option>\r\n                  ))}\r\n              </Form.Select>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>For Project</Form.Label>\r\n              <Form.Select aria-label=\"Default select example\" {...register('project')}>\r\n                <option>Choose Project</option>\r\n                {projectOption.length > 0 &&\r\n                  projectOption.map((project) => (\r\n                    <option key={project.project_id} value={project.project_id}>\r\n                      {project.project}\r\n                    </option>\r\n                  ))}\r\n              </Form.Select>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Label>Staff</Form.Label>\r\n              <Form.Select aria-label=\"Default select example\" {...register('staff')}>\r\n                <option>Choose staff</option>\r\n                {staffOption.length > 0 &&\r\n                  staffOption.map((staff) => (\r\n                    <option key={staff.staff_id} value={staff.staff_id}>\r\n                      {staff.staff}\r\n                    </option>\r\n                  ))}\r\n              </Form.Select>\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n              <Form.Label>Request Status</Form.Label>\r\n              <Form.Select aria-label=\"Default select example\" {...register('request_status')}>\r\n                <option>Request status options</option>\r\n                {reqStatusOption.length > 0 &&\r\n                  reqStatusOption.map((request_status) => (\r\n                    <option\r\n                      key={request_status.request_status_id}\r\n                      value={request_status.request_status_id}\r\n                    >\r\n                      {request_status.request_status_name}\r\n                    </option>\r\n                  ))}\r\n              </Form.Select>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Req date</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  placeholder=\"Enter Request date\"\r\n                  {...register('req_date')}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Col md={12} className=\"mt-2\">\r\n            <Button onClick={props.onHide}>Close</Button>\r\n            <Button className=\"float-end\" type=\"submit\">\r\n              {props.title}\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst Reports = () => {\r\n  const [modalShow, setModalShow] = React.useState(false)\r\n  const [dataPropertiesReqs, setDataPropertiesReq] = useState([])\r\n\r\n  const applyFilterTypes = [\r\n    {\r\n      key: 'auto',\r\n      name: 'Immediately',\r\n    },\r\n    {\r\n      key: 'onClick',\r\n      name: 'On Button Click',\r\n    },\r\n  ]\r\n\r\n  const onExporting = (e) => {\r\n    const workbook = new ExcelJS.Workbook()\r\n    const worksheet = workbook.addWorksheet('request properties sheet')\r\n\r\n    exportDataGrid({\r\n      component: e.component,\r\n      worksheet: worksheet,\r\n      autoFilterEnabled: true,\r\n    }).then(() => {\r\n      workbook.xlsx.writeBuffer().then((buffer) => {\r\n        saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'requestList.xlsx')\r\n      })\r\n    })\r\n    e.cancel = true\r\n  }\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    showFilterRow: true,\r\n    showHeaderFilter: true,\r\n    currentFilter: applyFilterTypes[0].key,\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  })\r\n  var dataGrid = null\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GetPropertiesReq_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setDataPropertiesReq(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Card.Header>\r\n          <h3>Reports</h3>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <DataGrid\r\n            ref={(ref) => (dataGrid = ref)}\r\n            dataSource={dataPropertiesReqs}\r\n            // defaultColumns={columns}\r\n            showRowLines={true}\r\n            showBorders={true}\r\n          >\r\n            <Column dataField=\"project_name\" caption=\"Project Name\" />\r\n            <Column dataField=\"req_name\" caption=\"request Name\" />\r\n            <Column dataField=\"staff\" caption=\"Staff Name\" />\r\n            <Column dataField=\"po\" caption=\"product Owner\" />\r\n            <Column dataField=\"properties_name\" caption=\"Item Name\" />\r\n            <Column dataField=\"req_date\" caption=\"Request Date\" />\r\n            <Column\r\n              dataField=\"request_status\"\r\n              caption=\"Request status\"\r\n              allowFiltering={false}\r\n              cellRender={(e) => {\r\n                if (e.data.request_status == 'Approved') {\r\n                  return (\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                      <Badge pill bg=\"success\">\r\n                        {e.data.request_status}\r\n                      </Badge>\r\n                    </div>\r\n                  )\r\n                } else if (e.data.request_status == 'Pending') {\r\n                  return (\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                      <Badge pill bg=\"secondary\">\r\n                        {e.data.request_status}\r\n                      </Badge>\r\n                    </div>\r\n                  )\r\n                } else if (e.data.request_status == 'Rejected') {\r\n                  return (\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                      <Badge pill bg=\"danger\">\r\n                        {e.data.request_status}\r\n                      </Badge>\r\n                    </div>\r\n                  )\r\n                } else if (e.data.request_status == 'Not Redurned') {\r\n                  return (\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                      <Badge pill bg=\"danger\">\r\n                        {e.data.request_status}\r\n                      </Badge>\r\n                    </div>\r\n                  )\r\n                } else if (e.data.request_status == 'Returned') {\r\n                  return (\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                      <Badge pill bg=\"success\">\r\n                        {e.data.request_status}\r\n                      </Badge>\r\n                    </div>\r\n                  )\r\n                }\r\n              }}\r\n            />\r\n\r\n            <ColumnChooser enabled={true} />\r\n            <Selection mode=\"multiple\" />\r\n            <Export enabled={true} fileName=\"Request\" allowExportSelectedData={true} />\r\n            <Paging defaultPageSize={10} />\r\n            <FilterRow visible={state.showFilterRow} applyFilter={state.currentFilter} />\r\n            <HeaderFilter visible={state.showHeaderFilter} />\r\n            <Selection mode=\"single\" />\r\n            <SearchPanel visible={true} width={240} placeholder=\"Search...\" />\r\n            <Summary>\r\n              <TotalItem column=\"id_no\" summaryType=\"count\" />\r\n            </Summary>\r\n          </DataGrid>\r\n        </Card.Body>\r\n      </Card>\r\n      <CustomModal show={modalShow} onHide={() => setModalShow(false)}></CustomModal>\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomModal.defaultProps = {\r\n  title: 'Add Properties Request',\r\n}\r\nCustomModal.propTypes = {\r\n  onHide: PropTypes.func,\r\n}\r\nexport default Reports\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"names":["CustomModal","props","useState","projectOption","setProjectOptions","staffOption","setStaffOptions","reqStatusOption","setReqStatusOptions","propertiesOption","setPropertiesOptions","useRef","React","useForm","mode","register","handleSubmit","errors","reset","watch","setSuccess","useEffect","axios","method","url","then","data","console","log","catch","err","size","centered","closeButton","id","title","onSubmit","body","req_name","req_date","request_status","parseInt","staff","propertiy","project","headers","code","Notify","e","md","className","controlId","type","placeholder","name","length","map","value","properties_id","properties_name","project_id","staff_id","request_status_id","request_status_name","onClick","onHide","defaultProps","modalShow","setModalShow","dataPropertiesReqs","setDataPropertiesReq","showFilterRow","showHeaderFilter","currentFilter","startDate","Date","endDate","state","ref","dataSource","showRowLines","showBorders","Column","dataField","caption","allowFiltering","cellRender","style","display","justifyContent","pill","bg","ColumnChooser","enabled","Selection","Export","fileName","allowExportSelectedData","Paging","defaultPageSize","FilterRow","visible","applyFilter","HeaderFilter","SearchPanel","width","Summary","TotalItem","column","summaryType","show","Badge","bsPrefix","text","as","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName"],"sourceRoot":""}