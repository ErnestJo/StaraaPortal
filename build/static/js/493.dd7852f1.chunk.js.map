{"version":3,"file":"static/js/493.dd7852f1.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap-icons/dist/icons/arrow-clockwise.js","views/propertiesManagement/PropertiesManagement.js","../node_modules/@hookform/resolvers/src/validateFieldsNatively.ts","../node_modules/@hookform/resolvers/src/toNestError.ts","../node_modules/@hookform/resolvers/yup/src/yup.ts","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["var _excluded = [\"color\", \"size\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowClockwise = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"\n  }));\n});\nArrowClockwise.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowClockwise.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default ArrowClockwise;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport { Button, Card, Modal, Form, Row, Col, Badge } from 'react-bootstrap'\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport ExcelJS from 'exceljs'\r\nimport { exportDataGrid } from 'devextreme/excel_exporter'\r\nimport saveAs from 'file-saver'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport DataGrid, {\r\n  Column,\r\n  FilterRow,\r\n  HeaderFilter,\r\n  SearchPanel,\r\n  Summary,\r\n  TotalItem,\r\n  ColumnChooser,\r\n  Export,\r\n  Selection,\r\n  Lookup,\r\n  Paging,\r\n} from 'devextreme-react/data-grid'\r\nimport Notify from '../../Helper/Notify'\r\n\r\nconst GetPropertiesStatus_URL = 'api/get_properties_status'\r\nconst GetAddres_URL = '/api/get_address'\r\nconst AddProperties_URL = '/api/add_properties'\r\nconst GetProperties_URL = '/api/get_properties'\r\nconst UpdateProperties_URL = '/api/update_properties'\r\nconst UpdatePropertiesStatus_URL = '/api/update_properties_status'\r\n\r\nconst schema = yup.object().shape({\r\n  properties_name: yup.string().required(),\r\n  serial_number: yup.string().required(),\r\n  model: yup.string().required(),\r\n  properties_status: yup.number().required(),\r\n  imei: yup.number().required(),\r\n})\r\nfunction CustomModal(props) {\r\n  const [propStatusOption, setPropStatusOption] = useState([])\r\n\r\n  const userRef = useRef()\r\n\r\n  React.useEffect(() => {}, [])\r\n  const { register, errors, handleSubmit, reset } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(schema),\r\n  })\r\n\r\n  const [errMsg, setErrMsg] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  const submitPropertiesData = (data) => {\r\n    try {\r\n      var body = {\r\n        properties_name: data.properties_name,\r\n        serial_number: data.serial_number,\r\n        imei: data.imei,\r\n        model: data.model,\r\n        properties_status: parseInt(data.properties_status),\r\n      }\r\n      console.log(body)\r\n      axios\r\n        .post(AddProperties_URL, body, {\r\n          headers: { 'content-Type': 'application/json' },\r\n        })\r\n        .then((data) => {\r\n          reset()\r\n          console.log(data.data[0].data[0])\r\n          if ((data.data[0].data[0].code = 111)) {\r\n            props.reloadPage()\r\n            props.onHide()\r\n            Notify.notifySuccess('Properties was added Succefully')\r\n          } else {\r\n            Notify.notifyError('failed to add new Properties')\r\n          }\r\n        })\r\n      setSuccess(true)\r\n    } catch (e) {}\r\n  }\r\n\r\n  const Getproperties = () => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GetProperties_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setPropStatusOption(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    Getproperties()\r\n    axios({\r\n      method: 'GET',\r\n      url: GetPropertiesStatus_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setPropStatusOption(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal\">{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit(submitPropertiesData)}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Propertiy Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Propertiy Name\"\r\n                  name=\"properties_name\"\r\n                  {...register('properties_name')}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              {' '}\r\n              <Form.Label>Property Status</Form.Label>\r\n              <Form.Select aria-label=\"Default select\" {...register('properties_status')} required>\r\n                <option value=\"\">Choose Status </option>\r\n                {propStatusOption.length > 0 &&\r\n                  propStatusOption.map((properties_status) => (\r\n                    <option\r\n                      key={properties_status.properties_status_id}\r\n                      value={properties_status.properties_status_id}\r\n                    >\r\n                      {properties_status.properties_status_name}\r\n                    </option>\r\n                  ))}\r\n              </Form.Select>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Imei</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Imei\"\r\n                  name=\"imei\"\r\n                  {...register('imei')}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>model</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"model\"\r\n                  name=\"model\"\r\n                  {...register('model')}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Serial Number</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Serial Number\"\r\n                  name=\"serial_number\"\r\n                  {...register('serial_number')}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Col md={12} className=\"mt-2\">\r\n            <Button onClick={props.onHide}>Close</Button>\r\n            <Button className=\"float-end\" type=\"submit\">\r\n              {props.title}\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst PropertiesManagement = () => {\r\n  const [modalShow, setModalShow] = React.useState(false)\r\n  const [data, setData] = useState([])\r\n  const [dataProperties, setDataProperties] = useState([])\r\n\r\n  const applyFilterTypes = [\r\n    {\r\n      key: 'auto',\r\n      name: 'Immediately',\r\n    },\r\n    {\r\n      key: 'onClick',\r\n      name: 'On Button Click',\r\n    },\r\n  ]\r\n\r\n  const onExporting = (e) => {\r\n    const workbook = new ExcelJS.Workbook()\r\n    const worksheet = workbook.addWorksheet('User sheet')\r\n\r\n    exportDataGrid({\r\n      component: e.component,\r\n      worksheet: worksheet,\r\n      autoFilterEnabled: true,\r\n    }).then(() => {\r\n      workbook.xlsx.writeBuffer().then((buffer) => {\r\n        saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'UserList.xlsx')\r\n      })\r\n    })\r\n    e.cancel = true\r\n  }\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    showFilterRow: true,\r\n    showHeaderFilter: true,\r\n    currentFilter: applyFilterTypes[0].key,\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  })\r\n  var dataGrid = null\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const fetchData = () => {\r\n    axios({\r\n      method: 'GET',\r\n      url: GetProperties_URL,\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data[0].data)\r\n        setDataProperties(data.data[0].data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Card.Header>\r\n          <Button className=\"primary\" onClick={() => setModalShow(true)}>\r\n            Add Properties\r\n          </Button>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <DataGrid\r\n            ref={(ref) => (dataGrid = ref)}\r\n            dataSource={dataProperties}\r\n            showBorders={true}\r\n            showRowLines={true}\r\n            allowColumnResizing={true}\r\n            allowColumnReordering={true}\r\n            rowAlternationEnabled={true}\r\n            columnResizingMode=\"nextColumn\"\r\n            columnAutoWidth={true}\r\n          >\r\n            <Column dataField=\"properties_name\" caption=\"Item Name\" />\r\n            <Column dataField=\"model\" caption=\"Model\" />\r\n            <Column dataField=\"imei\" caption=\"Imei\" />\r\n            <Column dataField=\"serial_number\" caption=\"Serial Number\" />\r\n            <Column\r\n              dataField=\"properties_status_name\"\r\n              caption=\"Properties \"\r\n              allowFiltering={false}\r\n              cellRender={(e) => {\r\n                if (e.data.properties_status_name == 'Good Condition') {\r\n                  return (\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                      <Badge bg=\"success\">{e.data.properties_status_name}</Badge>\r\n                      {console.log(e.data)}\r\n                    </div>\r\n                  )\r\n                } else {\r\n                  return (\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                      <Badge bg=\"secondary\">{e.data.properties_status_name}</Badge>\r\n                    </div>\r\n                  )\r\n                }\r\n              }}\r\n            />\r\n            <Column\r\n              dataField=\"properties_id\"\r\n              caption=\"Actions\"\r\n              allowFiltering={false}\r\n              cellRender={(e) => (\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  {/* <Button variant=\"success\" className=\"mx-1\">\r\n                    <Icon.Check2 />\r\n                  </Button> */}\r\n                  {/* <Button variant=\"warning\" className=\"mx-1\">\r\n                    <Icon.Pencil />\r\n                  </Button> */}\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                      console.log(e.data.properties_status_name)\r\n                      if (e.data.properties_status_name == 'bad condition') {\r\n                        var body = {\r\n                          properties_id: e.data.properties_id,\r\n                          properties_status: 1,\r\n                        }\r\n                        console.log(body)\r\n                        axios\r\n                          .post(UpdatePropertiesStatus_URL, body, {\r\n                            headers: { 'content-Type': 'application/json' },\r\n                          })\r\n                          .then((data) => {\r\n                            console.log(data.data[0].data[0])\r\n                            if ((data.data[0].data[0].code = 111)) {\r\n                              fetchData()\r\n                              Notify.notifySuccess('Properties Status was added changed')\r\n                            } else {\r\n                              Notify.notifyError('Properties Status was not Changed')\r\n                            }\r\n                          })\r\n                      } else if (e.data.properties_status_name == 'Good Condition') {\r\n                        var body = {\r\n                          properties_id: e.data.properties_id,\r\n                          properties_status: 2,\r\n                        }\r\n                        console.log(body)\r\n                        axios\r\n                          .post(UpdatePropertiesStatus_URL, body, {\r\n                            headers: { 'content-Type': 'application/json' },\r\n                          })\r\n                          .then((data) => {\r\n                            console.log(data.data[0].data[0])\r\n                            if ((data.data[0].data[0].code = 111)) {\r\n                              fetchData()\r\n                              Notify.notifySuccess('Properties Status was  Changed')\r\n                            } else {\r\n                              Notify.notifyError('Properties Status was not Changed')\r\n                            }\r\n                          })\r\n                      }\r\n                    }}\r\n                    className=\"mx-1\"\r\n                  >\r\n                    <Icon.ArrowClockwise />\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            />\r\n            <ColumnChooser enabled={true} />\r\n            <Selection mode=\"multiple\" />\r\n            <Export enabled={true} fileName=\"Properties\" allowExportSelectedData={true} />\r\n            <Paging defaultPageSize={10} />\r\n            <FilterRow visible={state.showFilterRow} applyFilter={state.currentFilter} />\r\n            <HeaderFilter visible={state.showHeaderFilter} />\r\n            <Selection mode=\"single\" />\r\n            <SearchPanel visible={true} width={240} placeholder=\"Search...\" />\r\n            <Summary>\r\n              <TotalItem column=\"id_no\" summaryType=\"count\" />\r\n            </Summary>\r\n          </DataGrid>\r\n        </Card.Body>\r\n      </Card>\r\n      <CustomModal\r\n        show={modalShow}\r\n        reloadPage={fetchData}\r\n        onHide={() => setModalShow(false)}\r\n      ></CustomModal>\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomModal.defaultProps = {\r\n  title: 'Add Properties',\r\n}\r\nCustomModal.propTypes = {\r\n  onHide: PropTypes.func,\r\n}\r\n\r\nexport default PropertiesManagement\r\n","import {\n  get, FieldError, ResolverOptions, Ref\n} from 'react-hook-form';\n\nconst setCustomValidity = (ref: Ref, fieldPath: string, errors: Record<string, FieldError>) => {\n  if (ref && 'reportValidity' in ref) {\n    const error = get(errors, fieldPath) as FieldError | undefined;\n    ref.setCustomValidity((error && error.message) || '');\n\n    ref.reportValidity();\n  }\n};\n\n// Native validation (web only)\nexport const validateFieldsNatively = <TFieldValues>(\n  errors: Record<string, FieldError>,\n  options: ResolverOptions<TFieldValues>,\n): void => {\n\n\n  for (const fieldPath in options.fields) {\n    const field = options.fields[fieldPath];\n    if (field && field.ref && 'reportValidity' in field.ref) {\n      setCustomValidity(field.ref, fieldPath, errors)\n    } else if (field.refs) {\n      field.refs.forEach((ref: HTMLInputElement) => setCustomValidity(ref, fieldPath, errors))\n    }\n  }\n};\n","import {\n  set,\n  get,\n  FieldError,\n  FieldErrors,\n  Field,\n  ResolverOptions,\n} from 'react-hook-form';\nimport { validateFieldsNatively } from './validateFieldsNatively';\n\nexport const toNestError = <TFieldValues>(\n  errors: Record<string, FieldError>,\n  options: ResolverOptions<TFieldValues>,\n): FieldErrors<TFieldValues> => {\n  options.shouldUseNativeValidation && validateFieldsNatively(errors, options);\n\n  const fieldErrors = {} as FieldErrors<TFieldValues>;\n  for (const path in errors) {\n    const field = get(options.fields, path) as Field['_f'] | undefined;\n\n    set(\n      fieldErrors,\n      path,\n      Object.assign(errors[path], { ref: field && field.ref }),\n    );\n  }\n\n  return fieldErrors;\n};\n","import Yup from 'yup';\nimport { toNestError, validateFieldsNatively } from '@hookform/resolvers';\nimport { appendErrors, FieldError } from 'react-hook-form';\nimport { Resolver } from './types';\n\n/**\n * Why `path!` ? because it could be `undefined` in some case\n * https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n */\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) => {\n  return (error.inner || []).reduce<Record<string, FieldError>>(\n    (previous, error) => {\n      if (!previous[error.path!]) {\n        previous[error.path!] = { message: error.message, type: error.type! };\n      }\n\n      if (validateAllFieldCriteria) {\n        const types = previous[error.path!].types;\n        const messages = types && types[error.type!];\n\n        previous[error.path!] = appendErrors(\n          error.path!,\n          validateAllFieldCriteria,\n          previous,\n          error.type!,\n          messages\n            ? ([] as string[]).concat(messages as string[], error.message)\n            : error.message,\n        ) as FieldError;\n      }\n\n      return previous;\n    },\n    {},\n  );\n};\n\nexport const yupResolver: Resolver =\n  (schema, schemaOptions = {}, resolverOptions = {}) =>\n  async (values, context, options) => {\n    try {\n      if (schemaOptions.context && process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n        );\n      }\n\n      const result = await schema[\n        resolverOptions.mode === 'sync' ? 'validateSync' : 'validate'\n      ](\n        values,\n        Object.assign({ abortEarly: false }, schemaOptions, { context }),\n      );\n\n      options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n      return {\n        values: resolverOptions.rawValues ? values : result,\n        errors: {},\n      };\n    } catch (e: any) {\n      if (!e.inner) {\n        throw e;\n      }\n\n      return {\n        values: {},\n        errors: toNestError(\n          parseErrorSchema(\n            e,\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n  };\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowClockwise","forwardRef","_ref","ref","color","size","rest","React","xmlns","viewBox","width","height","fill","fillRule","d","propTypes","PropTypes","defaultProps","GetProperties_URL","UpdatePropertiesStatus_URL","schema","yup","shape","properties_name","required","serial_number","model","properties_status","imei","CustomModal","props","useState","propStatusOption","setPropStatusOption","useRef","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","reset","setSuccess","useEffect","axios","method","url","then","data","console","log","catch","err","Modal","centered","closeButton","id","title","Form","onSubmit","body","parseInt","headers","code","reloadPage","onHide","Notify","e","Row","Col","md","className","controlId","type","placeholder","name","value","map","properties_status_id","properties_status_name","Button","onClick","modalShow","setModalShow","dataProperties","setDataProperties","showFilterRow","showHeaderFilter","currentFilter","startDate","Date","endDate","state","fetchData","Card","dataSource","showBorders","showRowLines","allowColumnResizing","allowColumnReordering","rowAlternationEnabled","columnResizingMode","columnAutoWidth","Column","dataField","caption","allowFiltering","cellRender","style","display","justifyContent","Badge","bg","variant","properties_id","ColumnChooser","enabled","Selection","Export","fileName","allowExportSelectedData","Paging","defaultPageSize","FilterRow","visible","applyFilter","HeaderFilter","SearchPanel","Summary","TotalItem","column","summaryType","show","setCustomValidity","fieldPath","error","get","message","reportValidity","validateFieldsNatively","options","field","fields","refs","forEach","toNestError","shouldUseNativeValidation","fieldErrors","path","set","schemaOptions","resolverOptions","values","context","Promise","abortEarly","result","rawValues","inner","validateAllFieldCriteria","criteriaMode","reduce","previous","types","messages","appendErrors","concat","bsPrefix","pill","text","as","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName"],"sourceRoot":""}